<?xml version="1.0" encoding="UTF-8"?>
<language id="hyperplaintext" name="HyperPlainText" version="2.0" _section="Source">
  <metadata>
    <property name="mimetypes">text/x-c;text/x-csrc;image/x-xpixmap</property>
    <property name="globs">*.txt</property>
  </metadata>

  <styles>
    <style id="comment"           name="Comment"               map-to="def:comment"/>
    <style id="title"           name="title"               map-to="def:title"/>
    <style id="hyperlink"           name="hyperlink"               map-to="def:hyperlink"/>
    <style id="heading1"           name="heading1"               map-to="def:heading1"/>
    <style id="heading2"           name="heading2"               map-to="def:heading2"/>
    <style id="heading3"           name="heading4"               map-to="def:heading3"/>
    <style id="heading4"           name="heading4"               map-to="def:heading4"/>
    <style id="bold"           name="bold"               map-to="def:bold"/>
    <style id="string"            name="String"                map-to="def:string"/>
    <style id="floating-point"    name="Floating point number" map-to="def:floating-point"/>
  </styles>

  <definitions>

    <!--regexs-->
    <define-regex id="preproc-start">^\s*#\s*</define-regex>
    <define-regex id="escaped-character" extended="true">
      \\(                   # leading backslash
      [\\\"\'nrbtfav\?] |   # escaped character
      [0-7]{1,3} |          # one, two, or three octal digits
      x[0-9A-Fa-f]+         # 'x' followed by hex digits
      )
    </define-regex>

    <!--contexts NOT used on the main context-->
    <!-- TODO: what about scanf ? -->
    <!-- man 3 printf -->
    <context id="printf" style-ref="printf" extend-parent="false">
      <match extended="true">
        \%\%|\%
        (?:[1-9][0-9]*\$)?      # argument
        [#0\-\ \+\'I]*          # flags
        (?:[1-9][0-9]*|\*)?     # width
        (?:\.\-?(?:[0-9]+|\*))? # precision
        (?:hh|ll|[hlLqjzt])?    # length modifier
        [diouxXeEfFgGaAcsCSpnm] # conversion specifier
      </match>
    </context>


    <context id="heading1" style-ref="heading1">
      <match>(^◼[^◼].*)*</match>
     </context>
     
     <context id="heading2" style-ref="heading2">
      <match>(^◼◼[^◼].*)*</match>
     </context>
    
     <context id="heading3" style-ref="heading3">
      <match>(^◼◼◼[^◼].*)*</match>
     </context>

    <context id="heading4" style-ref="heading4">
      <match>(^◼◼◼◼[^◼].*)*</match>
     </context>
     
     <context id="title" style-ref="title">
      <match>(^❙.*❙)</match>
     </context>
     
      <context id="bold" style-ref="bold">
      <match>(⦁.*⦁)</match>
     </context>
    
      <context id="hyperlink" style-ref="hyperlink">
      <match>(⟦.*⟧)</match>
     </context>


    <!-- http://www.lysator.liu.se/c/ANSI-C-grammar-l.html -->
    <context id="float" style-ref="floating-point">
      <match extended="true">
        (?&lt;![\w\.])
        ((\.[0-9]+ | [0-9]+\.[0-9]*) ([Ee][+-]?[0-9]*)? |
         ([0-9]+[Ee][+-]?[0-9]*))
        [fFlL]?
        (?![\w\.])
      </match>
    </context>

    <context id="decimal" style-ref="decimal">
      <match extended="true">
        (?&lt;![\w\.])
        (0|[1-9][0-9]*)[uUlL]*
        (?![\w\.])
      </match>
    </context>


    <!--Main context-->
    <context id="hyperplaintext" class="no-spell-check">
      <include>
        <context ref="title"/>
        <context ref="hyperlink"/>
        <context ref="heading1"/>
        <context ref="heading2"/>
        <context ref="heading3"/>
        <context ref="heading4"/>
        <context ref="bold"/>
        <context ref="float"/>
      </include>
    </context>

  </definitions>
</language>
