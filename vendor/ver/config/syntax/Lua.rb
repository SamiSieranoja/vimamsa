# Encoding: UTF-8

{comment: "Lua Syntax: version 0.8",
 fileTypes: ["lua"],
 foldingStartMarker: 
  /^\s*\b(?<_1>function|local\s+function|if|for)\b|{[ \t]*$|\[\[/,
 foldingStopMarker: /\bend\b|^\s*}|\]\]/,
 keyEquivalent: "^~L",
 name: "Lua",
 patterns: 
  [{captures: 
     {1 => {name: "keyword.control.lua"},
      2 => {name: "entity.name.function.scope.lua"},
      3 => {name: "entity.name.function.lua"},
      4 => {name: "punctuation.definition.parameters.begin.lua"},
      5 => {name: "variable.parameter.function.lua"},
      6 => {name: "punctuation.definition.parameters.end.lua"}},
    match: 
     /\b(?<_1>function)\s+(?<_2>[a-zA-Z_.:]+[.:])?(?<_3>[a-zA-Z_]\w*)\s*(?<_4>\()(?<_5>[^)]*)(?<_6>\))/,
    name: "meta.function.lua"},
   {match: 
     /(?<![\d.])\s0x[a-fA-F\d]+|\b\d+(?<_1>\.\d+)?(?<_2>[eE]-?\d+)?|\.\d+(?<_3>[eE]-?\d+)?/,
    name: "constant.numeric.lua"},
   {begin: /'/,
    beginCaptures: {0 => {name: "punctuation.definition.string.begin.lua"}},
    end: "'",
    endCaptures: {0 => {name: "punctuation.definition.string.end.lua"}},
    name: "string.quoted.single.lua",
    patterns: [{match: /\\./, name: "constant.character.escape.lua"}]},
   {begin: /"/,
    beginCaptures: {0 => {name: "punctuation.definition.string.begin.lua"}},
    end: "\"",
    endCaptures: {0 => {name: "punctuation.definition.string.end.lua"}},
    name: "string.quoted.double.lua",
    patterns: [{match: /\\./, name: "constant.character.escape.lua"}]},
   {begin: /(?<!--)\[(?<_1>=*)\[/,
    beginCaptures: {0 => {name: "punctuation.definition.string.begin.lua"}},
    end: "\\]\\1\\]",
    endCaptures: {0 => {name: "punctuation.definition.string.end.lua"}},
    name: "string.quoted.other.multiline.lua"},
   {begin: /--\[(?<_1>=*)\[/,
    captures: {0 => {name: "punctuation.definition.comment.lua"}},
    end: "\\]\\1\\]",
    name: "comment.block.lua"},
   {captures: {1 => {name: "punctuation.definition.comment.lua"}},
    match: /(?<_1>--)(?!\[\[).*$\n?/,
    name: "comment.line.double-dash.lua"},
   {match: 
     /\b(?<_1>break|do|else|for|if|elseif|return|then|repeat|while|until|end|function|local|in)\b/,
    name: "keyword.control.lua"},
   {match: 
     /(?<![^.]\.|:)\b(?<_1>false|nil|true|_G|_VERSION|math\.(?<_2>pi|huge))\b|(?<![.])\.{3}(?!\.)/,
    name: "constant.language.lua"},
   {match: /(?<![^.]\.|:)\b(?<_1>self)\b/, name: "variable.language.self.lua"},
   {match: 
     /(?<![^.]\.|:)\b(?<_1>assert|collectgarbage|dofile|error|getfenv|getmetatable|ipairs|loadfile|loadstring|module|next|pairs|pcall|print|rawequal|rawget|rawset|require|select|setfenv|setmetatable|tonumber|tostring|type|unpack|xpcall)\b(?=[(?<_2> {])/,
    name: "support.function.lua"},
   {match: 
     /(?<![^.]\.|:)\b(?<_1>coroutine\.(?<_2>create|resume|running|status|wrap|yield)|string\.(?<_3>byte|char|dump|find|format|gmatch|gsub|len|lower|match|rep|reverse|sub|upper)|table\.(?<_4>concat|insert|maxn|remove|sort)|math\.(?<_5>abs|acos|asin|atan2?|ceil|cosh?|deg|exp|floor|fmod|frexp|ldexp|log|log10|max|min|modf|pow|rad|random|randomseed|sinh?|sqrt|tanh?)|io\.(?<_6>close|flush|input|lines|open|output|popen|read|tmpfile|type|write)|os\.(?<_7>clock|date|difftime|execute|exit|getenv|remove|rename|setlocale|time|tmpname)|package\.(?<_8>cpath|loaded|loadlib|path|preload|seeall)|debug\.(?<_9>debug|[gs]etfenv|[gs]ethook|getinfo|[gs]etlocal|[gs]etmetatable|getregistry|[gs]etupvalue|traceback))\b(?=[(?<_10> {])/,
    name: "support.function.library.lua"},
   {match: /\b(?<_1>and|or)\b/, name: "keyword.operator.lua"},
   {match: /\+|-|%|#|\*|\/|\^|==?|~=|<=?|>=?|(?<!\.)\.{2}(?!\.)/,
    name: "keyword.operator.lua"}],
 scopeName: "source.lua",
 uuid: "93E017CC-6F27-11D9-90EB-000D93589AF7"}
